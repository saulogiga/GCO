@model GCO.Dominio.Entidade.UnidadeDeDesenvolvimento

@{
    ViewBag.Title = "DM - Unidade de Desenvolvimento - Scripts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">

    setInterval(function(){AtualizarStatus(@Model.IdUnidadeDesenvolvimento)},2000);

    $(document).ready( function () {
        if("@Model.ExecutantoScript" == "True"){
            $('#btnExecutarScript').val("Executando...");
            $('#GerarArquivo').attr('disabled', 'disabled');
            $('#btnExecutarScript').attr('disabled', 'disabled');
            $('#divBotao').attr('disabled', 'disabled');
        }
    });

    function AtualizarStatus(id)
    {
        if($('#btnExecutarScript').val() == "Executando..."){
            
            $.getJSON('@Url.Action("AtualizarScript")', { IdUnidadeDesenvolvimento: id}, function (data) {
                $(data.Resultado).each(function (index, script) {
                    $("#Script_" + script.IdScript).empty();
                    $("#Script_" + script.IdScript).append("<div  class='ScriptExecutado' title='Script Executado'></div>");                    
                });

                if(data.IdScriptExecutato != 0){
                    $("#Script_" + data.IdScriptExecutato).empty();
                    $("#Script_" + data.IdScriptExecutato).append("<div  class='ScriptExecutando' title='Executando...'></div>");
                }else{
                    $('#btnExecutarScript').val("Executar Scripts");
                    $('#GerarArquivo').removeAttr('disabled');
                    $('#btnExecutarScript').removeAttr('disabled');
                    $('#divBotao').removeAttr('disabled');
                }
            });
        }
    }

    function ExecutarScript(id) {
        if($('#btnExecutarScript').val() == "Executar Scripts"){
            $('#btnExecutarScript').val("Executando...");
            $('#GerarArquivo').attr('disabled', 'disabled');
            $('#btnExecutarScript').attr('disabled', 'disabled');
            $('#divBotao').attr('disabled', 'disabled');
            $.getJSON('@Url.Action("ExecutarScript")', { IdUnidadeDesenvolvimento: id}, function (data) {
                if (data.isRedirect) {
                    window.location.href = data.redirectUrl;
                    $('#btnExecutarScript').val("Executar Scripts");
                }
            
            });
        }
    }
</script>
@Html.ActionLink("Voltar", "Listar", "UnidadeDeDesenvolvimento", null, new { @class = "BtnVoltar", title = "Voltar" })

<h2>Unidade de Desenvolvimento - Scripts</h2>

@using (Html.BeginForm())
{

    <div id="divBotao" style="height: 40px;">
        @if (Model.IdStatusUnidadeDesenvolvimento == 2 || Model.IdStatusUnidadeDesenvolvimento == 3 || Model.IdStatusUnidadeDesenvolvimento == 4)
        {
            <div class="Esq">
                @Html.ActionLink("Cadastrar Novo Script", "Novo", new { idUnidadeDesenvolvimento = Model.IdUnidadeDesenvolvimento }, new { @class = "BtnNew" })
            </div>
            <div class="Esq50">
                @Html.ActionLink("Importar Script", "Importar", new { idUnidadeDesenvolvimento = Model.IdUnidadeDesenvolvimento }, new { @class = "BtnImportar" })
            </div>
        }
        @if (Model.UnidadeDeDesenvolvimentoDeBanco.Count() > 0 && (Model.IdStatusUnidadeDesenvolvimento == 2 || Model.IdStatusUnidadeDesenvolvimento == 3 || Model.IdStatusUnidadeDesenvolvimento == 4))
        {
            <div class="Dir">
                <input type="button" id="btnExecutarScript" name="btnExecutarScript" value="Executar Scripts" onclick="ExecutarScript(@Model.IdUnidadeDesenvolvimento)" />
            </div>
        }
        <div class="Dir20">
            <input id="GerarArquivo" type="submit" value="Gerar Arquivo" style="font-size: 12px; padding: 7px;" /></div>
        <div style="clear: both;"></div>
    </div>


    <div>
        <div class="editor-label Esq">
            @Html.LabelFor(model => model.NumeroTicket)
        </div>
        <div class="editor-field Esq5">
            @Html.DisplayFor(model => model.NumeroTicket)
        </div>
        <div class="editor-label Esq20">
            @Html.LabelFor(model => model.NumeroSolicitacao)
        </div>
        <div class="editor-field Esq5">
            @Html.DisplayFor(model => model.NumeroSolicitacao)
        </div>
        <div class="editor-label Esq20">
            @Html.LabelFor(model => model.Projeto)
        </div>
        <div class="editor-field Esq5">
            @Html.DisplayFor(model => model.Projeto.Nome)
        </div>
        <div class="editor-label Esq20">
            <label>Status</label>
        </div>
        <div class="editor-field Esq5">
            @Html.DisplayFor(model => model.StatusUnidadeDesenvolvimento.Nome)
        </div>
        <div style="clear: both;"></div>
    </div>
}

<table style="width: 1200px;">
    <tr>
        <th style="width: 25px; text-align: center;">St.
        </th>
        <th style="width: 160px;">Nome
        </th>
        <th>Comentário
        </th>
        <th style="width: 150px;">Tipo
        </th>
        <th style="width: 150px;">Usuário
        </th>
        <th style="width: 18px;"></th>
        <th style="width: 18px;"></th>
        <th style="width: 18px;"></th>
    </tr>
    @*TODO: Modificar o filtro dos script*@
    @foreach (var item in Model.Scripts.Where(s => s.IsDeleted == false))
    {
        <tr>
            <td style="width: 25px; text-align: center;">
                <div id="Script_@item.IdScript">
                @if (item.Executado)
                {
                    <div  class="ScriptExecutado" title="Script Executado"></div>
                }
                else
                {
                    <div class="ScriptNaoExecutado" title="Script Não Executado"></div>
                }
                </div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comentario)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoDeScriptDeBanco.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Usuario.UserName)
            </td>
            <td>
                @Html.ActionLink("Editar", "Editar", new { IdScript = item.IdScript }, new { @class = "EditGrid", title = "Alterar" })
            </td>
            <td>
            @Html.ActionLink("Detalhe", "Detalhe", new { IdScript = item.IdScript }, new { @class = "DetalheGrid", title = "Detalhes" })
            <td>
                @Html.ActionLink("Apagar", "Apagar", new { IdScript = item.IdScript }, new { @class = "DeleteGrid", title = "Excluir" })
            </td>
        </tr>
    }
</table>
<br />
@Html.ActionLink("Voltar", "Listar", "UnidadeDeDesenvolvimento")
